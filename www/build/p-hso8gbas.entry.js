import{r as t,h as e}from"./p-390405e1.js";import{S as i}from"./p-50c607b1.js";const n=class{constructor(e){t(this,e),this.useCurrentLocation=!0,this.presetLocation="Adelaide",this.unit="celsius"}async componentWillLoad(){let[t,e]=await Promise.all([i.getLocation(),i.getTemperatureUnit()]);this.useCurrentLocation=t.useCoords,this.presetLocation=t.name,this.unit=e}async handleToggleLocation(t){this.useCurrentLocation=t,await i.setUseCoords(t)}async handleLocationChange(t){this.presetLocation=t,await i.setLocationName(t)}async handleUnitChange(t){this.unit=t,await i.setTemperatureUnit(t),console.log("+++++",t)}render(){return[e("ion-header",null,e("ion-toolbar",{color:"primary"},e("ion-buttons",{slot:"start"},e("ion-back-button",{defaultHref:"/"})),e("ion-title",null," Settings"))),e("ion-content",{class:"ion-padding"},e("small",null,"Choose to display weather either from your current location or a preset location of your choosing."),e("ion-radio-group",null,e("ion-item",null,e("ion-label",null,"Use current location"),e("ion-radio",{slot:"start",value:"current",checked:this.useCurrentLocation,onIonSelect:()=>this.handleToggleLocation(!0)})),e("ion-item",null,e("ion-label",null),"Use preset location",e("ion-radio",{slot:"start",value:"preset",checked:!this.useCurrentLocation,onIonSelect:()=>this.handleToggleLocation(!1)}))),e("small",null,"When using a preset location, the location listed below will be used."),e("ion-item",null,e("ion-input",{type:"text",value:this.presetLocation,onIonInput:t=>{this.handleLocationChange(t.target.value)}})),e("small",null,"Select the unit of temperature to display the weather:"),e("ion-radio-group",null,e("ion-item",null,e("ion-label",null,"Celsius"),e("ion-radio",{slot:"start",checked:"celsius"==this.unit,onIonSelect:()=>this.handleUnitChange("celsius")})),e("ion-item",null,e("ion-label",null,"Fahrenheit"),e("ion-radio",{slot:"start",checked:"fahrenheit"==this.unit,onIonSelect:()=>this.handleUnitChange("fahrenheit")})),e("ion-item",null,e("ion-label",null,"Kelvin"),e("ion-radio",{slot:"start",checked:"kelvin"==this.unit,onIonSelect:()=>this.handleUnitChange("kelvin")}))),e("small",{hidden:"kelvin"!=this.unit},"Kelvin? Seriously?"))]}static get style(){return"app-settings ion-content{--ion-background-color:#fff}"}};export{n as app_settings};